name: Deploy to Vultr VM

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Execute commands over SSH on Vultr VM
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VULTR_VM_HOST }}
        username: ${{ secrets.VULTR_VM_USERNAME }}
        key: ${{ secrets.VULTR_VM_SSH_KEY }}
        password: ${{ secrets.VULTR_VM_PASSWORD }}
        script: |
          if [[ "${{ GITHUB.REF_NAME }}" == "main" ]]; then
            export FRIEND_SERVICE_NAME=tg_lila_bot
            export MENTOR_SERVICE_NAME=tg_lila_mentor_bot
            export REPO_DIR=/root/tg_lila_bot
            export DATA_DIR=/root/tg_lila_bot_data
          else
            export FRIEND_SERVICE_NAME=tg_lila_bot_dev
            export MENTOR_SERVICE_NAME=tg_lila_mentor_dev_bot
            export REPO_DIR=/root/tg_lila_bot_dev
            export DATA_DIR=/root/tg_lila_bot_dev_data
          fi
          
          sudo apt-get update && apt-get upgrade -y
          sudo apt-get install -y git python3-venv ffmpeg
          systemctl stop $FRIEND_SERVICE_NAME || true
          systemctl stop $MENTOR_SERVICE_NAME || true
          mkdir -p $DATA_DIR
          
          rm -rf $REPO_DIR
          git clone -b ${{ GITHUB.REF_NAME }} https://github.com/dimitree54/tg_lila_bot.git $REPO_DIR
          cd $REPO_DIR
          
          python3 -m venv venv
          source venv/bin/activate
          pip3 install -U pip setuptools wheel
          pip3 install -r requirements.txt
          
          printf '%s\n' '${{ secrets.GOOGLE_CREDENTIALS }}' > $REPO_DIR/google-credentials.json
          echo FRIEND_TELEGRAM_TOKEN=${{ secrets.FRIEND_TELEGRAM_TOKEN }} >> $REPO_DIR/.env
          echo FRIEND_TELEGRAM_TOKEN_DEV=${{ secrets.FRIEND_TELEGRAM_TOKEN_DEV }} >> $REPO_DIR/.env
          echo MENTOR_TELEGRAM_TOKEN=${{ secrets.FRIEND_TELEGRAM_TOKEN }} >> $REPO_DIR/.env
          echo MENTOR_TELEGRAM_TOKEN_DEV=${{ secrets.FRIEND_TELEGRAM_TOKEN_DEV }} >> $REPO_DIR/.env
          echo YANDEX_TTS_API_KEY=${{ secrets.YANDEX_TTS_API_KEY }} >> $REPO_DIR/.env
          echo OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} >> $REPO_DIR/.env
          echo GOOGLE_APPLICATION_CREDENTIALS=$REPO_DIR/google-credentials.json >> $REPO_DIR/.env
          echo SAVE_PATH=$DATA_DIR >> $REPO_DIR/.env
          
          cp $REPO_DIR/$FRIEND_SERVICE_NAME.service /etc/systemd/system/$FRIEND_SERVICE_NAME.service
          cp $REPO_DIR/$MENTOR_SERVICE_NAME.service /etc/systemd/system/$MENTOR_SERVICE_NAME.service
          systemctl daemon-reload
          systemctl enable $FRIEND_SERVICE_NAME
          systemctl start $FRIEND_SERVICE_NAME
          systemctl enable $MENTOR_SERVICE_NAME
          systemctl start $MENTOR_SERVICE_NAME